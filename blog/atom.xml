<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://scalameta.org/munit/munit/blog</id>
    <title>MUnit Blog</title>
    <updated>2024-05-22T06:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://scalameta.org/munit/munit/blog"/>
    <subtitle>The best place to stay up-to-date with the latest MUnit news and events.</subtitle>
    <logo>http://scalameta.org/munit/munit/img/scalameta-logo.png</logo>
    <rights>Copyright © 2025 Scalameta</rights>
    <entry>
        <title type="html"><![CDATA[Finally 1.0.0 release of munit]]></title>
        <id>http://scalameta.org/munit/munit/blog/2024/05/22/release-1.0.0.html</id>
        <link href="http://scalameta.org/munit/munit/blog/2024/05/22/release-1.0.0.html"/>
        <updated>2024-05-22T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Thanks to great work from a lot of contributors we are finally releasing version 1.0.0 of munit. This was long time coming and finally we are out of milestones and ready for a new chapter of munit.</p> <h2><a class="anchor" aria-hidden="true" id="important-changes"></a><a href="#important-changes" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Important changes</h2> <h3><a class="anchor" aria-hidden="true" id="async-support-for-fixtures"></a><a href="#async-support-for-fixtures" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Async support for fixtures</h3> <p>Previou...</p>]]></summary>
        <author>
            <name>Tomasz Godzik</name>
            <uri>https://twitter.com/tgodzik</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Publish Scala 2 and Scala 3 macros together]]></title>
        <id>http://scalameta.org/munit/munit/blog/2021/01/05/macromix.html</id>
        <link href="http://scalameta.org/munit/munit/blog/2021/01/05/macromix.html"/>
        <updated>2021-01-05T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>The next release of MUnit makes use of a new compiler feature that allows you to publish Scala 2 and Scala 3 macros together in a single artifact. The blog post <a href="https://www.scala-lang.org/blog/2020/11/19/scala-3-forward-compat.html">Forward Compatibility for the Scala 3 Transition</a> by Jamie Thompson explains this feature ...</p>]]></summary>
        <author>
            <name>Ólafur Páll Geirsson</name>
            <uri>https://twitter.com/olafurpg</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using ScalaCheck with MUnit]]></title>
        <id>http://scalameta.org/munit/munit/blog/2020/03/24/scalacheck.html</id>
        <link href="http://scalameta.org/munit/munit/blog/2020/03/24/scalacheck.html"/>
        <updated>2020-03-24T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Property-based testing is a popular testing style and its most widely used
implementation for Scala is the <a href="https://www.scalacheck.org">ScalaCheck</a>
library.</p>
<p>Starting with version 0.7.0, MUnit introduces a dedicated integration for
ScalaCheck, which we'll explore in this blog post.</p>
]]></summary>
        <author>
            <name>Gabriele Petronella</name>
            <uri>https://twitter.com/gabro27</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cross-platform async testing support]]></title>
        <id>http://scalameta.org/munit/munit/blog/2020/02/16/async.html</id>
        <link href="http://scalameta.org/munit/munit/blog/2020/02/16/async.html"/>
        <updated>2020-02-16T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>MUnit v0.4.x did not support truly async tests on platforms like JavaScript. For
example, the following test case would succeed even if it returns a failing
future:</p>
<pre><code class="hljs css language-scala">test(<span class="hljs-string">"should fail after 100 milliseconds"</span>) {
  <span class="hljs-keyword">val</span> p = <span class="hljs-type">Promise</span>[<span class="hljs-type">Unit</span>]()
  setTimeout(<span class="hljs-number">100</span>) {
    p.failure(<span class="hljs-keyword">new</span> <span class="hljs-type">RuntimeException</span>(<span class="hljs-string">"boom"</span>))
  }
  p.future
}
</code></pre>
<p>The latest MUnit v0.5.0 release fixes this issue by adding support for async
tests on all platforms meaning that the example test case above fails as
expected after 100 milliseconds.</p>
]]></summary>
        <author>
            <name>Ólafur Páll Geirsson</name>
            <uri>https://twitter.com/olafurpg</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MUnit is a new Scala testing library]]></title>
        <id>http://scalameta.org/munit/munit/blog/2020/02/01/hello-world.html</id>
        <link href="http://scalameta.org/munit/munit/blog/2020/02/01/hello-world.html"/>
        <updated>2020-02-01T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Hello world! I'm excited to announce the first release of MUnit, a new Scala
testing library with a focus on actionable errors and extensible APIs. You may
be thinking &quot;Why create Yet Another Scala testing library?&quot;. It's a good
question and this post is my attempt to explain the motivations for creating
MUnit.</p>
]]></summary>
        <author>
            <name>Ólafur Páll Geirsson</name>
            <uri>https://twitter.com/olafurpg</uri>
        </author>
    </entry>
</feed>